--- !ruby/object:Inventory::Core
id: boogermann.gberet
repository: !ruby/object:GitHub::Repository
  name: arcade-gberet
  owner: !ruby/object:GitHub::Repository::Owner
    login: opengateware
  html_url: https://github.com/opengateware/arcade-gberet
funding: !ruby/object:GitHub::Funding
  custom:
  - https://www.paypal.com/donate/?hosted_button_id=N7HXKEL8VJ9CN
releases:
- !ruby/object:Inventory::Release
  date: 2022-10-01 08:40:28.000000000 Z
  download_url: https://github.com/opengateware/arcade-gberet/releases/download/0.1.0/boogermann.gberet_pocket-0.1.0.zip
  core: !ruby/object:Analogue::Core
    metadata: !ruby/object:Analogue::Core::Metadata
      platform_ids:
      - gberet
      shortname: gberet
      description: Green Beret/Rush n' Attack Compatible Gateware IP Core for FPGA
      author: boogermann
      url: https://github.com/opengateware/arcade-gberet
      version: 0.1.0
      date_release: '2022-10-01'
    framework: !ruby/object:Analogue::Core::Framework
      version_required: '1.1'
      sleep_supported: false
      dock: !ruby/object:Analogue::Core::Framework::Dock
        supported: true
        analog_output: false
      hardware: !ruby/object:Analogue::Core::Framework::Hardware
        link_port: false
  data: !ruby/object:Analogue::Data
    data_slots:
    - !ruby/object:Analogue::Data::DataSlot
      name: Arcade Game
      required: true
      parameters: !ruby/object:Analogue::Data::DataSlot::Parameters
        core_specific_file: true
        instance_json: true
        platform_index: 0
      filename: 
      extensions:
      - json
    - !ruby/object:Analogue::Data::DataSlot
      name: ROM
      required: true
      parameters: !ruby/object:Analogue::Data::DataSlot::Parameters
        core_specific_file: false
        instance_json: false
        platform_index: 0
      filename: 
      extensions:
      - rom
  updaters: 
  info: |
    Green Beret © 1985 Konami.

    Green Beret is a sideways-scrolling action/platform game set during the Cold War, in which a US Special Forces Marine must infiltrate a Russian military base to save four POW's from being executed by firing squad.
    This game is known in US as "Rush'n Attack".

    Initially, the soldier is armed with only a combat knife, but by killing the certain enemy troops, players can obtain either a three-shot flamethrower, a four-shot RPG, or a three-pack of hand grenades.
    The game has four stages in total: a missile base, a harbour, an air Base and a Siberian POW Camp. At the end of each stage the Marine will face a group of enemies specific to that stage.

    Note: You must provide your own roms to use this core.

    Developer(s)
        Konami
    Publisher(s)
        Konami
    Designer(s)
        Kiyohiro Sada
        Shinya Sakamoto
        Iku Mizutani
        Satoe Terashima
        Masanori Adachi
    Release
        1985

    This Implementation of a compatible Green Beret/Rush'n Attack arcade hardware in HDL is the work of MiSTer-X

    Analogue Pocket port by Marcus Andrade (Boogermann)

    All trademarks, logos, and copyrights are property of their respective owners.

    The authors and contributors or any of its maintainers are in no way associated with or endorsed by Konami.
  requires_license: false
- !ruby/object:Inventory::Release
  date: 2022-10-03 12:20:39.000000000 Z
  download_url: https://github.com/opengateware/arcade-gberet/releases/download/0.1.1/boogermann.gberet_pocket-0.1.1.zip
  core: !ruby/object:Analogue::Core
    metadata: !ruby/object:Analogue::Core::Metadata
      platform_ids:
      - gberet
      shortname: gberet
      description: Green Beret/Rush n' Attack Compatible Gateware IP Core for FPGA
      author: boogermann
      url: https://github.com/opengateware/arcade-gberet
      version: 0.1.1
      date_release: '2022-10-03'
    framework: !ruby/object:Analogue::Core::Framework
      version_required: '1.1'
      sleep_supported: false
      dock: !ruby/object:Analogue::Core::Framework::Dock
        supported: true
        analog_output: false
      hardware: !ruby/object:Analogue::Core::Framework::Hardware
        link_port: false
  data: !ruby/object:Analogue::Data
    data_slots:
    - !ruby/object:Analogue::Data::DataSlot
      name: Arcade Game
      required: true
      parameters: !ruby/object:Analogue::Data::DataSlot::Parameters
        core_specific_file: true
        instance_json: true
        platform_index: 0
      filename: 
      extensions:
      - json
    - !ruby/object:Analogue::Data::DataSlot
      name: ROM
      required: true
      parameters: !ruby/object:Analogue::Data::DataSlot::Parameters
        core_specific_file: false
        instance_json: false
        platform_index: 0
      filename: 
      extensions:
      - rom
  updaters: 
  info: |
    Green Beret © 1985 Konami.

    Green Beret is a sideways-scrolling action/platform game set during the Cold War, in which a US Special Forces Marine must infiltrate a Russian military base to save four POW's from being executed by firing squad.
    This game is known in US as "Rush'n Attack".

    Initially, the soldier is armed with only a combat knife, but by killing the certain enemy troops, players can obtain either a three-shot flamethrower, a four-shot RPG, or a three-pack of hand grenades.
    The game has four stages in total: a missile base, a harbour, an air Base and a Siberian POW Camp. At the end of each stage the Marine will face a group of enemies specific to that stage.

    Note: You must provide your own roms to use this core.

    Developer(s)
        Konami
    Publisher(s)
        Konami
    Designer(s)
        Kiyohiro Sada
        Shinya Sakamoto
        Iku Mizutani
        Satoe Terashima
        Masanori Adachi
    Release
        1985

    This Implementation of a compatible Green Beret/Rush'n Attack arcade hardware in HDL is the work of MiSTer-X

    Analogue Pocket port by Marcus Andrade (Boogermann)

    All trademarks, logos, and copyrights are property of their respective owners.

    The authors and contributors or any of its maintainers are in no way associated with or endorsed by Konami.
  requires_license: false
